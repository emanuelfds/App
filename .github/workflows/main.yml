name: Python application

on:
  push:
    branches: [ "rc", "develop"]
  workflow_dispatch:
    branches: [ "main" ]

permissions: write-all

jobs:
  # build:
  #   name: Build Docker image
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python 3.10
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: "3.10"
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install flake8 pytest
  #       if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  #   - name: Lint with flake8
  #     run: |
  #       # stop the build if there are Python syntax errors or undefined names
  #       flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
  #       # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
  #       flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  docker:
    name: Push Docker image
    # needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2
      
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2
      
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      # - name: Debug GitHub Ref
      #   if: github.ref == 'refs/heads/rc'
      #   run: |
      #     echo "GitHub Ref: ${{ github.ref }}"

      # - name: Imprimir GitHub Ref
      #   run: |
      #     echo "GitHub Ref: ${{ github.ref }}"

      # - name: Depurar Sed
      #   run: |
      #     BRANCH_NAME=$(echo "${{ github.ref }}" | sed 's/refs\/heads\///')
      #     echo "BRANCH_NAME=${BRANCH_NAME}"
        
      # - name: Imprimir BRANCH_NAME
      #   run: echo "BRANCH_NAME=${BRANCH_NAME}"
        
        
      - name: Set Branch Name
        if: github.ref == 'refs/heads/rc'
        run: |
          echo "GitHub Ref: ${{ github.ref }}"
          # echo "BRANCH_NAME=$(echo ${{ github.ref }} | sed 's/refs\/heads\///')" >> $GITHUB_ENV
          BRANCH_NAME=$(echo ${{ github.ref }} | sed 's/refs\/heads\///')
          echo "Branch name: $BRANCH_NAME"
    
      - name: Increase version
        if: github.ref == 'refs/heads/rc'
        run: |
          python3.10 increase-version.py component_version $BRANCH_NAME
          echo "newversion=$(cat component_version)" >> $GITHUB_ENV
          echo "newversion=$(cat component_version)" > component_version
          echo "Component Version: $newversion"
          echo "Componente Version 2: ${{ env.newversion }}"

      # - name: Push image to Docker Hub
      #   if: github.ref == 'refs/heads/rc'
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: ./Application
      #     push: true
      #     tags: emanuelfds/app:v${{ env.newversion }}

  # trivy-scanning-docker-hub:
  #   name: Trivy Scanner Docker Hub
  #   needs: docker
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Run Trivy vulnerability scanner
  #       uses: aquasecurity/trivy-action@master
  #       with:
  #         image-ref: 'emanuelfds/app:${{ needs.login-repo.outputs.runner_version }}'
  #         format: 'table' # sarif
  #         exit-code: '0'  # if 'exit-code: 1' your pipeline will be interrupted
  #         ignore-unfixed: true
  #         vuln-type: 'os,library'
  #         severity: 'CRITICAL,HIGH,MEDIUM'

  #     - name: Upload Trivy scan results to GitHub Security tab
  #       uses: github/codeql-action/upload-sarif@v3
  #       if: always()
  #       with:
  #         sarif_file: 'trivy-results.sarif'


  # modifygit:
  #   needs: docker
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       name: changing the deployment of git repo
  #       with:
  #         repository: 'emanuelfds/App-Manifest'
  #         token: ${{ secrets.GIT_PAT }}
  #         persist-credentials: true
  #     - name: modify the image
  #       run: |
  #         git config user.email ${{ vars.GIT_EMAIL }}
  #         git config user.name "${{ vars.GIT_USERNAME }}"
  #         pwd
  #         cat ${{ vars.K8S_PATH }}/deployment.yaml
  #         pwd
  #         sed -i "s+emanuelfds/app.*+emanuelfds/app:v$RUN_NUMBER+g" ${{ vars.K8S_PATH }}/deployment.yaml
  #         cat ${{ vars.K8S_PATH }}/deployment.yaml
  #         git add .
  #         git commit -m 'Versão da Aplicação alterada para a TAG: ${{ github.run_number }}'
  #         git push origin main
  #       env:
  #         RUN_NUMBER: ${{ github.run_number }}