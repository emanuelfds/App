name: Python application

on:
  push:
    branches: [ "main" ]

permissions: write-all

jobs:
  trivy-scanning:
    name: trivy-sec-scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'
    
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  build:
    name: Install Dependencies
    needs: [trivy-scanning]
    runs-on: ubuntu-latest
    steps:

    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  docker:
    name: Build and Push Docker Image to Docher Hub
    needs: [build]
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./Application
          push: true
          tags: emanuelfds/app:v${{ github.run_number }}

  trivy-scanning-docker-hub:
    name: Trivy Scanner Docker Hub
    needs: [docker]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'emanuelfds/app:v${{ github.run_number }}'                             # Docker image reference
          format: 'sarif'                                                                   # output format of scan results (table, json, sarif)
          output: 'trivy-results-docker-hub.sarif'                                          # location where vulnerability scan results will be recorded
          exit-code: '0'                                                                    # if 'exit-code: 1' your pipeline will be interrupted
          ignore-unfixed: true                                                              # ignore unfixed vulnerabilities
          vuln-type: 'os,library'                                                           # type of vulnerabilities to be displayed
          severity: 'CRITICAL,HIGH,MEDIUM'                                                  # severities of vulnerabilities to be displayed

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results-docker-hub.sarif'

      - name: Run Trivy vulnerability scanner in IaC mode - Application
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: './Application'
          hide-progress: false
          format: 'sarif'
          output: 'trivy-results-application.sarif'
          exit-code: '0' 
          ignore-unfixed: true          
          severity: 'CRITICAL,HIGH,MEDIUM'

      - name: Upload Trivy scan results to GitHub Security tab - Application
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results-application.sarif'
          category: 'TrivyScanResultsApplication'

      - name: Run Trivy vulnerability scanner in IaC mode - Configs
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: './Configs'
          hide-progress: false
          format: 'sarif'
          output: 'trivy-results-configs.sarif'
          exit-code: '0' 
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH,MEDIUM'

      - name: Upload Trivy scan results to GitHub Security tab - Configs
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results-configs.sarif'
          category: 'TrivyScanResultsConfigs'

  modifygit:
    name: Deploy Application in ArgoCD
    needs: [trivy-scanning-docker-hub]
    runs-on: ubuntu-latest
    environment: 
      name: prd
    steps:

      - name: Changing the deployment of git repo
        uses: actions/checkout@v4        
        with:
          ref: 'main'
          repository: 'emanuelfds/App-Manifest'
          token: ${{ secrets.GIT_PAT }}
          persist-credentials: true

      - name: Modifying Tag Image in Deployment
        run: |
          git config user.email ${{ secrets.GIT_EMAIL }}
          git config user.name "${{ vars.GIT_USERNAME }}"
          pwd
          cat ${{ vars.K8S_PATH }}/deployment.yaml
          pwd
          sed -i "s+emanuelfds/app.*+emanuelfds/app:v${{ github.run_number }}+g" ${{ vars.K8S_PATH }}/deployment.yaml
          sed -i "s+version:.*+version:v${{ github.run_number }}+g" ${{ vars.K8S_PATH }}/deployment.yaml
          cat ${{ vars.K8S_PATH }}/deployment.yaml
          git add .
          git commit -m 'Versão da Aplicação alterada para a TAG: ${{ github.run_number }}'
          git push origin main